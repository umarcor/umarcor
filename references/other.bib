@book{adams95,
  title={The Hitchhiker's Guide to the Galaxy},
  author={Adams, D.},
  isbn={9781417642595},
  url={http://books.google.com/books?id=W-xMPgAACAAJ},
  year={1995},
  publisher={San Val}
}

@book{jasinski16,
  author = {Jasinski, Ricardo},
  title = {Effective Coding with VHDL: Principles and Best Practice},
  year = {2016},
  isbn = {0262034220},
  doi={10.5555/2967388},
  publisher = {The MIT Press},
  abstract = {This book addresses an often-neglected aspect of the creation of VHDL designs. A VHDL description is also source code, and VHDL designers can use the best practices of software development to write high-quality code and to organize it in a design. This book presents this unique set of skills, teaching VHDL designers of all experience levels how to apply the best design principles and coding practices from the software world to the world of hardware. The concepts introduced here will help readers write code that is easier to understand and more likely to be correct, with improved readability, maintainability, and overall quality. After a brief review of VHDL, the book presents fundamental design principles for writing code, discussing such topics as design, quality, architecture, modularity, abstraction, and hierarchy. Building on these concepts, the book then introduces and provides recommendations for each basic element of VHDL code, including statements, design units, types, data objects, and subprograms. The book covers naming data objects and functions, commenting the source code, and visually presenting the code on the screen. All recommendations are supported by detailed rationales. Finally, the book explores two uses of VHDL: synthesis and testbenches. It examines the key characteristics of code intended for synthesis (distinguishing it from code meant for simulation) and then demonstrates the design and implementation of testbenches with a series of examples that verify different kinds of models, including combinational, sequential, and FSM code. Examples from the book are also available on a companion website, enabling the reader to experiment with the complete source code.}
}

@book{pedroni10,
  author = {Pedroni, Volnei A.},
  title = {Circuit Design and Simulation with VHDL, Second Edition},
  year = {2010},
  doi = {10.5555/1941889},
  isbn = {0262014335},
  publisher = {The MIT Press},
  edition = {2nd},
  abstract = {This text offers a comprehensive treatment of VHDL and its applications to the design and simulation of real, industry-standard circuits. It focuses on the use of VHDL rather than solely on the language, showing why and how certain types of circuits are inferred from the language constructs and how any of the four simulation categories can be implemented. It makes a rigorous distinction between VHDL for synthesis and VHDL for simulation. The VHDL codes in all design examples are complete, and circuit diagrams, physical synthesis in FPGAs, simulation results, and explanatory comments are included with the designs. The text reviews fundamental concepts of digital electronics and design and includes a series of appendixes that offer tutorials on important design tools including ISE, Quartus II, and ModelSim, as well as descriptions of programmable logic devices in which the designs are implemented, the DE2 development board, standard VHDL packages, and other features. All four VHDL editions (87, 93, 2002, and 2008) are covered. This expanded second edition is the first textbook on VHDL to include a detailed analysis of circuit simulation with VHDL testbenches in all four categories (nonautomated, fully automated, functional, and timing simulations), accompanied by complete practical examples. Chapters 19 have been updated, with new design examples and new details on such topics as data types and code statements. Chapter 10 is entirely new and deals exclusively with simulation. Chapters 1117 are also entirely new, presenting extended and advanced designs with theoretical and practical coverage of serial data communications circuits, video circuits, and other topics. There are many more illustrations, and the exercises have been updated and their number more than doubled.}
}

@INPROCEEDINGS{ginosar03,
  author={Ginosar, Ran},
  booktitle={Ninth International Symposium on Asynchronous Circuits and Systems, 2003. Proceedings.},
  title={Fourteen ways to fool your synchronizer},
  year={2003},
  volume={},
  number={},
  pages={89-96},
  abstract={Transferring data between mutually asynchronous clock domains requires safe synchronization. However, the exact nature of synchronization sometimes eludes designers, and as a result synchronization circuits get "optimized" to the point where they do no longer operate correctly. This paper reviews a number of such cases, analyzes the causes of the errors, and offers a correct synchronizer circuit for each case. A correct two flop synchronizer is presented. After discussing cases that avoid synchronization, the following synchronizers are reviewed: one flop, sneaky path, greedy path, wrong protocol, global reset, async clear, DFT leakage, pulse, slow-to-fast, metastability blocker, parallel and shared flop synchronizers.},
  keywords={},
  doi={10.1109/ASYNC.2003.1199169},
  ISSN={1522-8681},
  month={May},}
  % https://ieeexplore.ieee.org/document/1199169
  % https://webee.technion.ac.il/people/ran/papers/Sync_Errors_Feb03.pdf
}

@INPROCEEDINGS{cummings08,
  author={Cummings, Clifford E.},
  journal={SNUG-2008"},
  title={Clock Domain Crossing (CDC) Design & VerificationTechniques Using SystemVerilog},
  year={2008},
  % http://www.sunburst-design.com/papers/CummingsSNUG2008Boston_CDC.pdf
}

@ARTICLE{ginosar11,
  author={Ginosar, Ran},
  journal={IEEE Design Test of Computers},
  title={Metastability and Synchronizers: A Tutorial},
  year={2011},
  volume={28},
  number={5},
  pages={23-35},
  abstract={Metastability can arise whenever a signal is sampled close to a transition, leading to indecision as to its correct value. Synchronizer circuits, which guard against metastability, are becoming ubiquitous with the proliferation of timing domains on a chip. Despite the critical importance of reliable synchronization, this topic remains inadequately understood. This tutorial provides a glimpse into the theory and practice of this fascinating subject.},
  keywords={},
  doi={10.1109/MDT.2011.113},
  ISSN={1558-1918},
  month={Sep.},
  % https://ieeexplore.ieee.org/document/6028533
  % https://webee.technion.ac.il/~ran/papers/Metastability-and-Synchronizers.IEEEDToct2011.pdf
}

@online{riscvcontest2018,
  title = {RISC-V SoftCPU Contest 2018},
  url = {https://riscv.org/announcements/2018/10/risc-v-contest/},
  year = 2018,
  month = Oct
}

@online{pinea64,
  title = {{PINE A64 Single Board Computer}},
  url = {https://www.pine64.org/devices/single-board-computers/pine-a64-lts/},
}

@Online{stratix10,
  title = {{Intel Stratix 10 SX SoC FPGAs}},
  url   = {https://www.intel.com/content/www/us/en/products/programmable/soc/stratix-10.html},
}

@Online{arria10,
  title = {{Intel Arria 10 SoC FPGAs}},
  url   = {https://www.intel.com/content/www/us/en/products/programmable/soc/arria-10.html},
}

@Online{fomu,
  title = {{An FPGA in your USB port!}},
  url   = {https://tomu.im/fomu.html},
}

@Online{sifive-core-designer,
  title = {{SiFive Core Designer}},
  url   = {https://www.sifive.com/core-designer},
}

@INPROCEEDINGS{kulanov18,
  author={V. {Kulanov} and A. {Perepelitsyn} and I. {Zarizenko}},
  title={{Method of development and deployment of reconfigurable FPGA-based projects in cloud infrastructure}},
  booktitle={2018 IEEE 9th International Conference on Dependable Systems, Services and Technologies (DESSERT)},
  year={2018},
  pages={103-106}
}

@online{wang17,
  author={Wang, Chao and Lou, Wenqi and Gong, Lei and Jin, Lihui and Tan, Luchao and Hu, Yahui and Li, Xi and Zhou, Xuehai},
  title={{Reconfigurable Hardware Accelerators: Opportunities, Trends, and Challenges}},
  url="arXiv:1712.04771",
  year={2017},
  month={Dec}
}

@ARTICLE{teich12,
  author={J. Teich},
  journal={Proceedings of the IEEE},
  title={{Hardware/Software Codesign: The Past, the Present, and Predicting the Future}},
  year={2012},
  volume={100},
  number={Special Centennial Issue},
  pages={1411-1430},
  doi={10.1109/JPROC.2011.2182009},
  ISSN={0018-9219},
  month={May}
}

@INPROCEEDINGS{rowson94,
  author={J. A. Rowson},
  booktitle={31st Design Automation Conference},
  title={{Hardware/Software Co-Simulation}},
  year={1994},
  pages={439-440},
  doi={10.1109/DAC.1994.204143},
  ISSN={0738-100X},
  month={Jun}
}
